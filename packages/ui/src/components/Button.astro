---
export interface Props {
  variant?: 'primary' | 'secondary' | 'outline' | 'ghost';
  size?: 'sm' | 'md' | 'lg';
  href?: string;
  target?: string;
  class?: string;
  disabled?: boolean;
}

const { 
  variant = 'primary', 
  size = 'md', 
  href, 
  target, 
  class: className = '', 
  disabled = false,
  ...rest 
} = Astro.props;

const baseClasses = 'inline-flex items-center justify-center font-semibold rounded-md transition-all duration-200 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 disabled:opacity-50 disabled:cursor-not-allowed';

const variantClasses = {
  primary: 'bg-accent-blue text-white hover:bg-blue-600 focus-visible:outline-accent-blue shadow-sm',
  secondary: 'bg-signal-green text-white hover:bg-green-600 focus-visible:outline-signal-green shadow-sm',
  outline: 'border border-gray-600 text-text-light hover:bg-gray-800 focus-visible:outline-gray-600',
  ghost: 'text-text-light hover:bg-gray-800 focus-visible:outline-gray-600',
};

const sizeClasses = {
  sm: 'px-3 py-1.5 text-sm',
  md: 'px-4 py-2 text-sm',
  lg: 'px-6 py-3 text-base',
};

const classes = `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className}`;

const Tag = href ? 'a' : 'button';
---

<Tag 
  class={classes}
  href={href}
  target={target}
  disabled={disabled}
  {...rest}
>
  <slot />
</Tag>