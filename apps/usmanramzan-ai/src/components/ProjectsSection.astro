---
import { projects, featuredProjects } from '../data/projects.ts';
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from './ui/card';
---

<section id="projects" class="py-20 px-4 sm:px-6 lg:px-8 bg-gray-50 dark:bg-slate-800/50 scroll-mt-20">
  <div class="max-w-7xl mx-auto">
    <!-- Section Header -->
    <div class="text-center mb-16">
      <div class="inline-flex items-center justify-center w-12 h-12 bg-brand-100 dark:bg-brand-900/20 rounded-lg mb-6">
        <svg class="w-6 h-6 text-brand-600 dark:text-brand-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
        </svg>
      </div>
      <h2 class="text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4">
        Featured Projects
      </h2>
      <p class="text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto">
        Showcasing innovative AI engineering solutions and platform architecture projects that deliver measurable business impact.
      </p>
    </div>

    <!-- Featured Projects Grid -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-16">
      {featuredProjects.map((project) => (
        <Card className="group hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1">
          <div class="relative overflow-hidden">
            {project.imageUrl && (
              <img 
                src={project.imageUrl} 
                alt={project.title}
                class="w-full h-48 object-cover transition-transform duration-300 group-hover:scale-105"
                width="800"
                height="400"
                loading="lazy"
                decoding="async"
              />
            )}
            <div class="absolute top-4 left-4">
              <span class={`inline-flex px-3 py-1 rounded-full text-xs font-medium ${
                project.status === 'completed' 
                  ? 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400' 
                  : project.status === 'in-progress'
                  ? 'bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-400'
                  : 'bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-400'
              }`}>
                {project.status === 'in-progress' ? 'In Progress' : 
                 project.status === 'completed' ? 'Completed' : 'Concept'}
              </span>
            </div>
            <div class="absolute top-4 right-4">
              <span class={`inline-flex px-3 py-1 rounded-full text-xs font-medium ${
                project.category === 'ai' 
                  ? 'bg-purple-100 text-purple-800 dark:bg-purple-900/20 dark:text-purple-400'
                  : project.category === 'platform'
                  ? 'bg-orange-100 text-orange-800 dark:bg-orange-900/20 dark:text-orange-400'
                  : project.category === 'automation'
                  ? 'bg-cyan-100 text-cyan-800 dark:bg-cyan-900/20 dark:text-cyan-400'
                  : 'bg-pink-100 text-pink-800 dark:bg-pink-900/20 dark:text-pink-400'
              }`}>
                {project.category.charAt(0).toUpperCase() + project.category.slice(1)}
              </span>
            </div>
          </div>

          <CardHeader>
            <CardTitle className="text-xl font-bold text-gray-900 dark:text-white group-hover:text-brand-600 dark:group-hover:text-brand-400 transition-colors">
              {project.title}
            </CardTitle>
            <CardDescription className="text-gray-600 dark:text-gray-300">
              {project.description}
            </CardDescription>
          </CardHeader>

          <CardContent>
            <div class="mb-4">
              <p class="text-sm text-gray-700 dark:text-gray-300 leading-relaxed">
                {project.longDescription}
              </p>
            </div>

            <!-- Technologies -->
            <div class="mb-4">
              <div class="flex flex-wrap gap-2">
                {project.technologies.slice(0, 6).map((tech) => (
                  <span class="inline-flex px-2 py-1 text-xs font-medium bg-gray-100 dark:bg-slate-700 text-gray-800 dark:text-gray-200 rounded-md">
                    {tech}
                  </span>
                ))}
                {project.technologies.length > 6 && (
                  <span class="inline-flex px-2 py-1 text-xs font-medium bg-gray-100 dark:bg-slate-700 text-gray-600 dark:text-gray-400 rounded-md">
                    +{project.technologies.length - 6} more
                  </span>
                )}
              </div>
            </div>

            <!-- Metrics -->
            {project.metrics && (
              <div class="grid grid-cols-2 sm:grid-cols-3 gap-4 mb-4">
                {project.metrics.map((metric) => (
                  <div class="text-center p-2 bg-gray-50 dark:bg-slate-800 rounded-lg">
                    <div class="text-lg font-bold text-brand-600 dark:text-brand-400">
                      {metric.value}
                    </div>
                    <div class="text-xs text-gray-600 dark:text-gray-400">
                      {metric.label}
                    </div>
                  </div>
                ))}
              </div>
            )}
          </CardContent>

          <CardFooter>
            <div class="flex gap-3 w-full">
              {project.githubUrl && (
                <a
                  href={project.githubUrl}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="flex-1 inline-flex items-center justify-center px-4 py-2 border border-gray-300 dark:border-slate-600 rounded-lg text-sm font-medium text-gray-700 dark:text-gray-200 bg-white dark:bg-slate-800 hover:bg-gray-50 dark:hover:bg-slate-700 transition-colors"
                >
                  <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M12 0C5.37 0 0 5.37 0 12c0 5.31 3.435 9.795 8.205 11.385.6.105.825-.255.825-.57 0-.285-.015-1.23-.015-2.235-3.015.555-3.795-.735-4.035-1.41-.135-.345-.72-1.41-1.23-1.695-.42-.225-1.02-.78-.015-.795.945-.015 1.62.87 1.845 1.23 1.08 1.815 2.805 1.305 3.495.99.105-.78.42-1.305.765-1.605-2.67-.3-5.46-1.335-5.46-5.925 0-1.305.465-2.385 1.23-3.225-.12-.3-.54-1.53.12-3.18 0 0 1.005-.315 3.3 1.23.96-.27 1.98-.405 3-.405s2.04.135 3 .405c2.295-1.56 3.3-1.23 3.3-1.23.66 1.65.24 2.88.12 3.18.765.84 1.23 1.905 1.23 3.225 0 4.605-2.805 5.625-5.475 5.925.435.375.81 1.095.81 2.22 0 1.605-.015 2.895-.015 3.3 0 .315.225.69.825.57A12.02 12.02 0 0024 12c0-6.63-5.37-12-12-12z"/>
                  </svg>
                  Code
                </a>
              )}
              {project.liveUrl && (
                <a
                  href={project.liveUrl}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="flex-1 inline-flex items-center justify-center px-4 py-2 bg-primary text-primary-foreground hover:bg-primary/90 rounded-lg text-sm font-medium transition-colors"
                >
                  <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                  </svg>
                  Live Demo
                </a>
              )}
            </div>
          </CardFooter>
        </Card>
      ))}
    </div>

    <!-- All Projects -->
    <div class="mb-12">
      <h3 class="text-2xl font-bold text-gray-900 dark:text-white mb-8 text-center">
        All Projects
      </h3>
      <div class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6">
        {projects.map((project) => (
          <Card className="group hover:shadow-lg transition-all duration-300">
            {project.imageUrl && (
              <div class="relative overflow-hidden">
                <img 
                  src={project.imageUrl} 
                  alt={project.title}
                  class="w-full h-32 object-cover transition-transform duration-300 group-hover:scale-105"
                  width="400"
                  height="200"
                  loading="lazy"
                  decoding="async"
                />
                <div class="absolute top-2 right-2">
                  <span class={`inline-flex px-2 py-1 rounded-full text-xs font-medium ${
                    project.category === 'ai' 
                      ? 'bg-purple-100 text-purple-800 dark:bg-purple-900/20 dark:text-purple-400'
                      : project.category === 'platform'
                      ? 'bg-orange-100 text-orange-800 dark:bg-orange-900/20 dark:text-orange-400'
                      : project.category === 'automation'
                      ? 'bg-cyan-100 text-cyan-800 dark:bg-cyan-900/20 dark:text-cyan-400'
                      : 'bg-pink-100 text-pink-800 dark:bg-pink-900/20 dark:text-pink-400'
                  }`}>
                    {project.category.charAt(0).toUpperCase() + project.category.slice(1)}
                  </span>
                </div>
              </div>
            )}

            <CardHeader className="pb-3">
              <CardTitle className="text-lg font-semibold text-gray-900 dark:text-white group-hover:text-brand-600 dark:group-hover:text-brand-400 transition-colors">
                {project.title}
              </CardTitle>
              <CardDescription className="text-sm text-gray-600 dark:text-gray-300 line-clamp-2">
                {project.description}
              </CardDescription>
            </CardHeader>

            <CardContent className="pt-0">
              <div class="flex flex-wrap gap-1 mb-3">
                {project.technologies.slice(0, 4).map((tech) => (
                  <span class="inline-flex px-2 py-0.5 text-xs font-medium bg-gray-100 dark:bg-slate-700 text-gray-700 dark:text-gray-300 rounded">
                    {tech}
                  </span>
                ))}
                {project.technologies.length > 4 && (
                  <span class="inline-flex px-2 py-0.5 text-xs font-medium bg-gray-100 dark:bg-slate-700 text-gray-500 dark:text-gray-400 rounded">
                    +{project.technologies.length - 4}
                  </span>
                )}
              </div>
            </CardContent>

            <CardFooter className="pt-0">
              <div class="flex gap-2 w-full">
                {project.githubUrl && (
                  <a
                    href={project.githubUrl}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="flex-1 inline-flex items-center justify-center px-3 py-1.5 border border-gray-300 dark:border-slate-600 rounded text-xs font-medium text-gray-700 dark:text-gray-200 bg-white dark:bg-slate-800 hover:bg-gray-50 dark:hover:bg-slate-700 transition-colors"
                  >
                    <svg class="w-3 h-3 mr-1.5" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M12 0C5.37 0 0 5.37 0 12c0 5.31 3.435 9.795 8.205 11.385.6.105.825-.255.825-.57 0-.285-.015-1.23-.015-2.235-3.015.555-3.795-.735-4.035-1.41-.135-.345-.72-1.41-1.23-1.695-.42-.225-1.02-.78-.015-.795.945-.015 1.62.87 1.845 1.23 1.08 1.815 2.805 1.305 3.495.99.105-.78.42-1.305.765-1.605-2.67-.3-5.46-1.335-5.46-5.925 0-1.305.465-2.385 1.23-3.225-.12-.3-.54-1.53.12-3.18 0 0 1.005-.315 3.3 1.23.96-.27 1.98-.405 3-.405s2.04.135 3 .405c2.295-1.56 3.3-1.23 3.3-1.23.66 1.65.24 2.88.12 3.18.765.84 1.23 1.905 1.23 3.225 0 4.605-2.805 5.625-5.475 5.925.435.375.81 1.095.81 2.22 0 1.605-.015 2.895-.015 3.3 0 .315.225.69.825.57A12.02 12.02 0 0024 12c0-6.63-5.37-12-12-12z"/>
                    </svg>
                    Code
                  </a>
                )}
                {project.liveUrl && (
                  <a
                    href={project.liveUrl}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="flex-1 inline-flex items-center justify-center px-3 py-1.5 bg-primary text-primary-foreground hover:bg-primary/90 rounded text-xs font-medium transition-colors"
                  >
                    <svg class="w-3 h-3 mr-1.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                    </svg>
                    Demo
                  </a>
                )}
              </div>
            </CardFooter>
          </Card>
        ))}
      </div>
    </div>

    <!-- Call to Action -->
    <div class="text-center">
      <p class="text-gray-600 dark:text-gray-300 mb-6">
        Interested in collaborating on innovative AI projects?
      </p>
      <a
        href="#contact"
        class="inline-flex items-center justify-center h-11 rounded-md px-8 bg-primary text-primary-foreground hover:bg-primary/90 font-medium transition-colors"
      >
        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
        </svg>
        Let's Work Together
      </a>
    </div>
  </div>
</section>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>